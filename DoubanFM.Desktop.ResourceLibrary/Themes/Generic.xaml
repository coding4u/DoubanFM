<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:local="clr-namespace:DoubanFM.Desktop.ResourceLibrary"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
	xmlns:converters="clr-namespace:DoubanFM.Desktop.Infrastructure.Converters;assembly=DoubanFM.Desktop.Infrastructure"
>
	<converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
	<converters:BooleanNegationToVisibilityConverter x:Key="BooleanNegationToVisibilityConverter"/>
	<converters:BoolToImageConverter x:Key="BoolToImageConverter"/>


	<Style x:Key="CustomButtonBaseStyle" TargetType="ButtonBase">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Foreground" Value="White"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#7F222222"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key= "CustomButtonStyle"  BasedOn="{StaticResource CustomButtonBaseStyle}" TargetType="Button"/>

	<Style x:Key="CustomCheckBoxStyle" BasedOn="{StaticResource CustomButtonBaseStyle}" TargetType="CheckBox"/>

	<Style x:Key="LoudSpeakerStyle" BasedOn="{StaticResource CustomCheckBoxStyle}" TargetType="CheckBox">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Border Background="Transparent">
						<Viewbox>
							<Canvas x:Name="DoubanFM__VolumeControl__Loudspeaker" Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0">
								<Canvas x:Name="Waves" Width="256" Height="256" Canvas.Left="0" Canvas.Top="0">
									<Viewbox x:Name="Group" Width="424" Height="448" Canvas.Left="-168" Canvas.Top="-96">
										<Canvas Width="424" Height="448">
											<Canvas Width="256" Height="256" x:Name="Clip" Clip="F1 M 280,224L 424,448L 424,0L 280,224 Z ">
												<Ellipse x:Name="Ellipse" Width="400" Height="400" Canvas.Left="0" Canvas.Top="24" Stretch="Fill" StrokeThickness="16" StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}"/>
												<Ellipse x:Name="Ellipse_0" Width="336" Height="336" Canvas.Left="32" Canvas.Top="56" Stretch="Fill" StrokeThickness="16" StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}"/>
												<Ellipse x:Name="Ellipse_1" Width="272" Height="272" Canvas.Left="64" Canvas.Top="88" Stretch="Fill" StrokeThickness="16" StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}"/>
											</Canvas>
											<Path x:Name="Path" Width="144" Height="448" Canvas.Left="280" Canvas.Top="0" Stretch="Fill" StrokeThickness="0" StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}" Data="F1 M 280,224L 424,448L 424,0L 280,224 Z "/>
										</Canvas>
									</Viewbox>
								</Canvas>
								<Canvas Width="256" Height="256" Canvas.Left="0" Canvas.Top="0">
									<Rectangle x:Name="Rectangle" Width="32" Height="96" Canvas.Left="32" Canvas.Top="80" Stretch="Fill" StrokeThickness="1" StrokeLineJoin="Round" Fill="{TemplateBinding Foreground}"/>
									<Path x:Name="Path_2" Width="48" Height="192" Canvas.Left="60" Canvas.Top="32" Stretch="Fill" StrokeThickness="1" StrokeLineJoin="Round" Fill="{TemplateBinding Foreground}" Data="F1 M 80,80L 128,32L 128,224L 80,176L 80,80 Z "/>
								</Canvas>
							</Canvas>
						</Viewbox>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility" TargetName="Waves" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="stScrollBtn" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
		<Setter Property="Height" Value="5"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Grid>
						<Border x:Name="TrackBackground" Background="{TemplateBinding Background}">
							<Rectangle x:Name="PART_SelectionRange" Visibility="Hidden"/>
						</Border>
						<Track x:Name="PART_Track">
							<Track.DecreaseRepeatButton>
								<RepeatButton x:Name="LeftRepeatButton" Style="{StaticResource stScrollBtn}" Background="#7FFFFFFF" IsEnabled="False"/>
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton x:Name="RightRepeatButton" Style="{StaticResource stScrollBtn}" Background="#7F000000" IsEnabled="False"/>
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb x:Name="Thumb" Width="0" Height="0"/>
							</Track.Thumb>
						</Track>
						<Rectangle HorizontalAlignment="Left" Width="{Binding ActualWidth, ElementName=LeftRepeatButton}" Fill="{TemplateBinding Foreground}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="{x:Type local:VolumeControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:VolumeControl}">
					<Grid Height="30" Width="300">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="30"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<CheckBox x:Name="muteCheckBox" Margin="0,0,5,0"
								  IsChecked="{Binding IsMuted,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
								  Style="{StaticResource LoudSpeakerStyle}"/>
						<Slider x:Name="volumeSlider" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,5,0"
								Maximum="1.0" LargeChange="0.1" SmallChange="0.01" Style="{StaticResource SliderStyle}"
								Value="{Binding Volume, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PauseStyle" BasedOn="{StaticResource CustomCheckBoxStyle}" TargetType="{x:Type CheckBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Viewbox>
						<Canvas Width="26" Height="30" Background="{TemplateBinding Background}">
							<Path x:Name="Path" Width="25.981" Height="30.0003" Canvas.Left="2.87779e-007" Canvas.Top="-6.35788e-007" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 25.981,15.0001L 2.87779e-007,-6.35788e-007L 2.87779e-007,30.0003L 25.981,15.0001 Z "/>
						</Canvas>
					</Viewbox>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type CheckBox}">
							<Viewbox>
								<Canvas Width="30" Height="30" Background="{TemplateBinding Background}">
									<Rectangle  Width="10" Height="30" Canvas.Left="20" Canvas.Top="0" Stretch="Fill" Fill="{TemplateBinding Foreground}"/>
									<Rectangle  Width="10" Height="30" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{TemplateBinding Foreground}"/>
								</Canvas>
							</Viewbox>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>

	</Style>
	<Style x:Key="NextStyle" BasedOn="{StaticResource CustomButtonStyle}" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Canvas Width="30" Height="20" Clip="F1 M 0,0L 30,0L 30,20L 0,20L 0,0" Background="Transparent">
							<Canvas Width="30" Height="30" Canvas.Left="0" Canvas.Top="0">
								<Path x:Name="Path" Width="30" Height="20" Canvas.Left="-1.98682e-008" Canvas.Top="-9.53674e-007" Stretch="Fill" Data="M 30,-9.53674e-007L 26,-9.53674e-007L 26,8L 13,-9.53674e-007L 13,8L -1.98682e-008,-9.53674e-007L -1.98682e-008,20L 13,12L 13,20L 26,12L 26,20L 30,20L 30,-9.53674e-007 Z " Fill="{TemplateBinding Foreground}"/>
							</Canvas>
						</Canvas>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LikeStyle" BasedOn="{StaticResource CustomCheckBoxStyle}" TargetType="{x:Type CheckBox}">
		<Setter Property="BorderBrush" Value="White"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Viewbox>
						<Canvas Width="256" Height="220" Clip="F1 M 0,0L 256,0L 256,220L 0,220L 0,0" Background="{TemplateBinding Background}">
							<Path x:Name="PART_Path" Width="256" Height="216.961" Canvas.Left="1.67144e-005" Canvas.Top="5.03886" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 128,220C 154.667,200.333 186,172 202,156C 218,140 256,94 256,69C 256,-1.99995 194.288,0.999451 176,5C 144,12 135.016,36.0526 128,44C 120.984,36.0526 112,13 80,6C 61.7118,1.99945 2.61674e-005,-0.999954 5.82235e-006,70C 2.61674e-005,95 38,140 54,156C 70,172 101.333,200.333 128,220" Stroke="{TemplateBinding BorderBrush}" StrokeStartLineCap="Round" StrokeThickness="0"/>
						</Canvas>
					</Viewbox>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="StrokeThickness" TargetName="PART_Path" Value="20"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="StrokeThickness" TargetName="PART_Path" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Foreground" Value="#DFE75849"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#7F222222"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="NeverStyle" BasedOn="{StaticResource CustomButtonStyle}" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Viewbox>
						<Canvas Width="256" Height="256" Clip="F1 M 0,0L 256,0L 256,256L 0,256L 0,0" Background="{TemplateBinding Background}">
							<Path Width="185" Height="256" Canvas.Left="35.5" Canvas.Top="4.57764e-005" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="M 198.667,84L 198.667,236C 198.667,247.046 189.712,256 178.667,256L 77.3332,256C 66.2875,256 57.3332,247.046 57.3332,236L 57.3332,84C 57.3332,82.6301 57.471,81.2925 57.7333,80L 198.267,80C 198.529,81.2925 198.667,82.6301 198.667,84 Z M 91.2256,108.496L 91.2256,227.504L 108.774,227.504L 108.774,108.496L 91.2256,108.496 Z M 147.226,108.496L 147.226,227.504L 164.774,227.504L 164.774,108.496L 147.226,108.496 Z M 85,4.57764e-005L 171,4.57764e-005C 173.761,4.57764e-005 176,2.2386 176,5.00005L 176,32L 220.5,32L 220.5,64L 35.5,64L 35.5,32L 80,32L 80,5.00005C 80,2.2386 82.2386,4.57764e-005 85,4.57764e-005 Z M 101,16.0001C 98.2385,16.0001 95.9999,18.2387 95.9999,21.0001L 95.9999,32L 160,32L 160,21.0001C 160,18.2387 157.761,16.0001 155,16.0001L 101,16.0001 Z "/>
						</Canvas>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type local:PlayControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:PlayControl}">
					<!--<StackPanel Orientation="Horizontal" >
						<Button Height="75" Width="75"
								BorderThickness="0"                
								Command="{Binding BanCommand}"
								Style="{StaticResource CustomButtonStyle}">
							<Image Source="../Assets/Delete.png"/>
						</Button>

						<Button Height="75" Width="75"
								BorderThickness="0" 
								Command="{Binding LikeCommand}"
								Style="{StaticResource CustomButtonStyle}">
							<Image Source="{Binding CurrentSong.Like,Converter={StaticResource BoolToImageConverter},ConverterParameter=Like}" />
						</Button>


						<Button Height="75" Width="75"
								BorderThickness="0" 
								Command="{Binding Player.PlayPauseCommand}" 
								Style="{StaticResource CustomButtonStyle}">
							<Image Source="{Binding Player.IsPlaying,Converter={StaticResource BoolToImageConverter},ConverterParameter=Play}"/>
						</Button>


						<Button Height="75" Width="75"
								BorderThickness="0" 
								Command="{Binding PlayNextCommand}"
								Style="{StaticResource CustomButtonStyle}">
							<Image Source="../Assets/Media-Next.png"/>
						</Button>
					</StackPanel>-->
					<Grid >
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Button Height="35" Width="35" Margin="5,0"
								Style="{StaticResource NeverStyle}"
								Command="{Binding BanCommand}"/>
						<CheckBox Height="35" Width="35" Margin="5,0" Grid.Column="1"
								  Style="{StaticResource LikeStyle}"
								  IsChecked="{Binding CurrentSong.Like,Mode=TwoWay}"/>
						<CheckBox  Height="35" Width="35" Margin="5,0" Grid.Column="2"
								   Style="{StaticResource PauseStyle}"
								   IsChecked="{Binding Player.IsPlaying,Mode=OneWay}">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Checked">
									<i:InvokeCommandAction Command="{Binding Player.PlayCommand}"/>
								</i:EventTrigger>
								<i:EventTrigger EventName="Unchecked">
									<i:InvokeCommandAction Command="{Binding Player.PauseCommand}"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</CheckBox>
						<Button Height="35" Width="35" Margin="5,0" Grid.Column="3"
								Style="{StaticResource NextStyle}"
								Command="{Binding PlayNextCommand}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="FavoriteStyle" BasedOn="{StaticResource CustomCheckBoxStyle}" TargetType="{x:Type CheckBox}">
		<Setter Property="BorderBrush" Value="#7FFFFFFF"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Viewbox>
						<Canvas Width="128" Height="256" Clip="F1 M 0,0L 128,0L 128,256L 0,256L 0,0">
							<Path Width="128" Height="256" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{TemplateBinding BorderBrush}" Data="F1 M 0,0L 128,0L 128,256L 64,192L 0,256L 0,0 Z M 16,16L 16,216L 64,168L 112,216L 112,16L 16,16 Z "/>
							<Path Width="96" Height="200" Canvas.Left="16" Canvas.Top="16" Stretch="Fill" Fill="{TemplateBinding Foreground}" Data="F1 M 16,16L 112,16L 112,216L 64,168L 16,216L 16,16 Z "/>
							<Path x:Name="PWhite" Width="128" Height="256" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{TemplateBinding BorderBrush}" Data="F1 M 0,0L 128,0L 128,256L 64,192L 0,256L 0,0 Z" Visibility="Hidden"/>
						</Canvas>
					</Viewbox>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True"/>
								<Condition Property="IsMouseOver" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PWhite" Value="Visible"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True"/>
								<Condition Property="IsPressed" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PWhite" Value="Visible"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="False">
				<Setter Property="Foreground" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Foreground" Value="#7FFFFFFF"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="#7F000000"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="BorderBrush" Value="#7FFFFFFF"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid x:Name="PART_HeaderGrid" SnapsToDevicePixels="True">
						<Border Background="{TemplateBinding Background}">
							<ContentPresenter ContentSource="Header"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="Background" Value="#7F000000"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="PART_HeaderGrid" Property="IsMouseOver" Value="True"/>
								<Condition Property="IsSelected" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="#7FFFFFFF"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="{x:Type local:AnimatedTabControl}">
		<Setter Property="ItemContainerStyle" Value="{StaticResource TabItemStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:AnimatedTabControl}">
					<Grid Background="{TemplateBinding Background}" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Border Panel.ZIndex="1">
							<StackPanel IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center" KeyboardNavigation.TabIndex="1"/>
						</Border>

						<Grid Grid.Row="1" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
							<Viewport3D x:Name="vp3D" Visibility="Hidden" Width="Auto" Height="Auto">
								<Viewport3D.Camera>
									<PerspectiveCamera x:Name="camera" Position="0,0,0.5" LookDirection="0,0,-1" FieldOfView="90" />
								</Viewport3D.Camera>
								<Viewport3D.Children>
									<ModelVisual3D>
										<ModelVisual3D.Content>
											<Model3DGroup>
												<DirectionalLight Color="#444" Direction="0,0,-1" />
												<AmbientLight Color="#BBB" />
											</Model3DGroup>
										</ModelVisual3D.Content>
									</ModelVisual3D>
									<ModelVisual3D>
										<ModelVisual3D.Content>
											<GeometryModel3D>
												<GeometryModel3D.Geometry>
													<MeshGeometry3D  TriangleIndices="0,1,2 2,3,0" TextureCoordinates="0,1 1,1 1,0 0,0" Positions="-0.5,-0.5,0 0.5,-0.5,0 0.5,0.5,0 -0.5,0.5,0" />
												</GeometryModel3D.Geometry>
												<GeometryModel3D.Material>
													<DiffuseMaterial>
														<DiffuseMaterial.Brush>
															<VisualBrush Visual="{Binding ElementName=BorderIn}" Stretch="Uniform" />
														</DiffuseMaterial.Brush>
													</DiffuseMaterial>
												</GeometryModel3D.Material>
												<GeometryModel3D.BackMaterial>
													<DiffuseMaterial>
														<DiffuseMaterial.Brush>
															<VisualBrush Visual="{Binding ElementName=BorderIn}" Stretch="Uniform">
																<VisualBrush.RelativeTransform>
																	<ScaleTransform ScaleX="-1" CenterX="0.5" />
																</VisualBrush.RelativeTransform>
															</VisualBrush>
														</DiffuseMaterial.Brush>
													</DiffuseMaterial>
												</GeometryModel3D.BackMaterial>
												<GeometryModel3D.Transform>
													<RotateTransform3D>
														<RotateTransform3D.Rotation>
															<AxisAngleRotation3D x:Name="rotate" Axis="0,3,0" Angle="0" />
														</RotateTransform3D.Rotation>
													</RotateTransform3D>
												</GeometryModel3D.Transform>
											</GeometryModel3D>
										</ModelVisual3D.Content>
									</ModelVisual3D>
								</Viewport3D.Children>
							</Viewport3D>
							<Border x:Name="BorderOut" VerticalAlignment="Stretch">
								<Border x:Name="BorderIn" VerticalAlignment="Stretch" >
									<Grid>
										<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
									</Grid>
								</Border>
							</Border>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="local:AnimatedTabControl.SelectionChanging">
							<BeginStoryboard>
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="vp3D"  Storyboard.TargetProperty="Visibility">
										<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
										<DiscreteObjectKeyFrame KeyTime="0:0:1.1" Value="{x:Static Visibility.Hidden}" />
									</ObjectAnimationUsingKeyFrames>
									<DoubleAnimation To="0" Duration="0:0:0.05" Storyboard.TargetName="BorderOut" Storyboard.TargetProperty="Opacity" />
									<DoubleAnimation BeginTime="0:0:1.05" Duration="0:0:0.05" To="1" Storyboard.TargetName="BorderOut" Storyboard.TargetProperty="Opacity" />
									<Point3DAnimation To="0,0,1.1" From="0,0,0.5"  BeginTime="0:0:0.05" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.3"  Storyboard.TargetName="camera" 
											Storyboard.TargetProperty="(PerspectiveCamera.Position)" />
									<DoubleAnimation From="0" To="180" AccelerationRatio="0.3" DecelerationRatio="0.3" BeginTime="0:0:0.05" Duration="0:0:1"  Storyboard.TargetName="rotate" Storyboard.TargetProperty="Angle" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="WindowBaseTemplate" TargetType="{x:Type Window}">
		<Grid Background="{TemplateBinding Background}">
			<ContentPresenter/>
		</Grid>
	</ControlTemplate>

	<Style TargetType="{x:Type local:WindowBase}">
		<Setter Property="WindowStyle" Value="None"/>
		<Setter Property="ResizeMode" Value="NoResize"/>
		<Setter Property="SizeToContent" Value="WidthAndHeight"/>
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
		<Setter Property="Template" Value="{StaticResource WindowBaseTemplate}"/>
	</Style>



</ResourceDictionary>
